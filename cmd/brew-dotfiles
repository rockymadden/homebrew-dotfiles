#!/usr/bin/env bash

CD=$(brew --cache)
HD=~/
UD=/usr/local/var/dotfiles

bold='\033[1m'
lblue='\033[1;34m'
normal='\033[0m'
white='\033[0;37m'

case "${1}" in
  install)
    while (( "$#" )); do
      case "${2}" in
        --overwrite) overwrite='0' ; shift ;;
        --silent) silent='0' ; shift ;;
        --username=*) username=${2/--username=/''} ; shift ;;
        -o) overwrite='0' ; shift ;;
        -s) silent='0' ; shift ;;
        -u*) username=${3} ; shift ; shift ;;
        *) test -n "${2}" && username=${2} ; shift ;;
      esac
    done

    test -z "${username}" && read -e -p 'Enter username (e.g. rockymadden): ' username

    ${0} uninstall --silent
    mkdir -p "${CD}/Dotfiles"
    mkdir -p "${UD}/${username}"

    test -z "${silent}" && echo -e "${lblue}==>${normal} ${white}${bold}Downloading https://github.com/${username}/dotfiles/archive/master.tar.gz${normal}"
    curl -f -L -s -o "${CD}/Dotfiles/${username}-master.tar.gz" "https://github.com/${username}/dotfiles/archive/master.tar.gz"
    test $? -ne 0 && { test -z "${silent}" && echo 'Failed' ; exit 1; }

    test -z "${silent}" && echo -e "${lblue}==>${normal} ${white}${bold}Decompressing${normal}"
    tar -x -f "${CD}/Dotfiles/${username}-master.tar.gz" -C "${UD}/${username}" --strip 1
    test $? -ne 0 && { test -z "${silent}" && echo 'Failed' ; exit 1; }

    test -z "${silent}" && echo -e "${lblue}==>${normal} ${white}${bold}Securing${normal}"
    chmod -R g-rwx "${UD}/${username}" && chmod -R o-rwx "${UD}/${username}"
    test $? -ne 0 && { test -z "${silent}" && echo 'Failed' ; exit 1; }

    test -z "${silent}" && echo -e "${lblue}==>${normal} ${white}${bold}Stubbing directories${normal}"
    find "${UD}/${username}" -type d | tail -n +2 | sed "s|${UD}/${username}|${HD}|" | xargs -I{} mkdir -p {}
    test $? -ne 0 && { test -z "${silent}" && echo 'Failed' ; exit 1; }

    test -z "${silent}" && echo -e "${lblue}==>${normal} ${white}${bold}Symlinking files${normal}"
    test -n "${overwrite}" && find "${UD}/${username}" -type f ! -name '.DS_Store' | sed "s|${UD}/${username}|${HD}|" | xargs -I{} rm -f {}
    find "${UD}/${username}" -type f ! -name '.DS_Store' | sed "s|${UD}/${username}||" | xargs -I{} ln -s ${UD}/${username}{} ${HD}{}
    test $? -ne 0 && { test -z "${silent}" && echo 'Failed' ; exit 1; }
  ;;

  uninstall)
    while (( "$#" )); do
      case "${2}" in
        --silent) silent='0' ; shift ;;
        -s) silent='0' ; shift ;;
        *) shift ;;
      esac
    done

    username=$(${0} which)

    test -z "${silent}" && echo -e "${lblue}==>${normal} ${white}${bold}Uninstalling ${username}/dotfiles${normal}"
    test -n "${username}" && rm -rf "${UD}" && find "${HD}" -type l -ls | grep "${UD}" | awk '{print $11}' | sed 's|//|/|' | xargs -I{} rm -f {}
    test $? -ne 0 && { test -z "${silent}" && echo 'Failed' ; exit 1; }
  ;;

  upgrade)
    while (( "$#" )); do
      case "${2}" in
        --silent) silent='0' ; shift ;;
        -s) silent='0' ; shift ;;
        *) shift ;;
      esac
    done

    username=$(${0} which)

    test -z "${silent}" && echo -e "${lblue}==>${normal} ${white}${bold}Upgrading ${username}/dotfiles${normal}"
    test -n "${username}" && ${0} install ${username} --silent
    test $? -ne 0 && { test -z "${silent}" && echo 'Failed' ; exit 1; }
  ;;

  which)
    while (( "$#" )); do
      case "${2}" in
        --silent) silent='0' ; shift ;;
        -s) silent='0' ; shift ;;
        *) shift ;;
      esac
    done

    username=$(ls -1 /usr/local/var/dotfiles 2>/dev/null | head -n 1)
    case "${username}" in
      '') exit 1 ;;
      *) test -z "${silent}" && echo "${username}" ;;
    esac
  ;;

  --help)
    echo 'Usage:'
    echo "  brew dotfiles install <username> [--overwrite|-o] [--silent|-s]"
    echo "  brew dotfiles uninstall [--silent|-s]"
    echo "  brew dotfiles upgrade [--silent|-s]"
    echo "  brew dotfiles which [--silent|-s]"
    echo
    echo "Commands:"
    echo "  install       Install dotfiles corresponding to github.com:username/dotfiles"
    echo "  uninstall     Uninstall installed dotfiles"
    echo "  upgrade       Upgrade installed dotfiles"
    echo "  which         Output installed dotfiles username"
  ;;

  *) ${0} --help ; exit 1 ;;
esac

exit 0
